/* 
Author : Hemant Rana
SOC :   2 Dec 2015
DESC:   This class call by trigger to automate Task assingment once opportunity has been closed won.

    Version 2.0
    Date:7th Nov 2016
    Description : Migrating FEATURESET to PRODUCT/PRICEBOOK. Below are the name of the field which needs to be replaced - 
    OLD FIELD NAME       = NEW FIELD NAME
    Feature_Sets__r      = OpportunityLineItems;
    R00N00000008aGEXEA2  = OpportunityLineItems;
    Feature_Set__c       = OpportunityLineItem;
    Feature__c           = Product_Name__c;
    Opportunity_N__c     = OpportunityId;
    //Lines Commented as Can't update CurrencyISOCode of OpportunityLineItem 
    //Commenting "SignUp4_Conversion__c" for now as we have to change the type of the field from checkbox to picklist.After changing we will roll it back 637/901
    
    Version 3.0
    Date: 5th March 2017
    Description : Changed the AM - CSN to AM - HC .....
    Changed By : AT
*/

Public class TaskAssignAutomationTrgHelper{
    public static map<String,TaskRRassignment__c> userIndexVsTaskRRMap=TaskRRassignment__c.getAll();
    public static Integer currentIndex=0;
    public static Integer size=userIndexVsTaskRRMap.size();
    public static boolean  isRun=false;
    public static boolean  isRunOnboard=false;
     
        
    public static String RoundRobinAssignment()
    {
        System.debug('currentIndex===>'+currentIndex);
        String userId=currentIndex==size?userIndexVsTaskRRMap.get('3').User_Id__c:userIndexVsTaskRRMap.get(String.ValueOf(currentIndex)).User_Id__c;
        currentIndex=currentIndex==size?1:currentIndex+1;
        return userId;
    }
    Public static void onAfterUpdatecreateOnboarding(Map<Id,Opportunity> newMapOppty,Map<Id,Opportunity> oldMapOppty){
        System.debug('Inside Method');
        List<Onboarding__c> onboardingList=new List<Onboarding__c>();
        Onboarding__c onboardingObj = new Onboarding__c();
        Set<Id> setAccountIds =new Set<Id>();
        String AssignTo_CSC;
        Set<Id> setOpportunityID=new Set<Id>();
        List<Opportunity> oppObjListUpdate=new List<Opportunity>();
        //Get Onboarding "EMI" and "CSN-Supplier" record type Id from Onboarding__c Object
        Id EMIRecordTypeId = Schema.SObjectType.Onboarding__c.getRecordTypeInfosByName().get('EMI').getRecordTypeId();
        Id CSNSupplierRecordTypeId = Schema.SObjectType.Onboarding__c.getRecordTypeInfosByName().get('CSN-Supplier').getRecordTypeId();

        for(Opportunity objOppty:newMapOppty.values()){
            setOpportunityID.add(objOppty.id);
            setAccountIds.add(objOppty.AccountID);
        }
        System.debug('EMIRecordTypeId *****************'+EMIRecordTypeId );
        System.debug('CSNSupplierRecordTypeId *****************'+CSNSupplierRecordTypeId );
        Map<Id,Account> mapIDOppParentAcc=new Map<ID,Account>([Select Id,Original_A_C_Owner__c,OwnerId,CS_Rep__c,Country_Region__c,AM_Event__c,AM_CSN__c,AM_Survey__c, AM_PA__c,PA_Rep__c,AM_CrowdCompass__c,
                                                                (Select Id, AccountId,UserId,TeamMemberRole From AccountTeamMembers),
                                                                (SELECT Id,RecordTypeId,Account_Name__c FROM Onboarding__r WHERE (RecordTypeId = : EMIRecordTypeId OR RecordTypeId = : CSNSupplierRecordTypeId))
                                                                 from Account where id in:setAccountIds]); 
        //Map for AccountId vs it's related Single Onboarding record................
        Map<Id,Set<Id>> accIdVsOnboardRecTyp=new Map<Id,Set<Id>>();
        Set<Id> onboardRecTypeId=new Set<Id>();//Onboarding Record Type Id set for above Map....
        //.........................ENDS HERE......................................
        Set<Id> accOnboardIdSet=new Set<Id>();// Set of accountId having one Onboarding Reocrd..........
        List<OpportunityLineItem> listFeatureset;
        Set<String> featureSetValue=new Set<String>();
        Boolean CSNPlanner = false;
        for(OpportunityLineItem objFeature:[select Product_Name__c,OpportunityId from OpportunityLineItem where OpportunityId in :setOpportunityID]){
            /*if(mapoppIdVsFeatureSets.keySet().contains(objFeature.OpportunityId)){
            mapoppIdVsFeatureSets.get(objFeature.OpportunityId).add(objFeature);
            }else{
            listFeatureset=new List<OpportunityLineItem>();
            listFeatureset.add(objFeature);
            mapoppIdVsFeatureSets.put(objFeature.OpportunityId,listFeatureset);
            }*/
            featureSetValue.add(objFeature.Product_Name__c);
        } 
        Map<ID,Map<String,String>> mapAccountIdTeam=new Map<Id,Map<String,String>>();

        // Get AM-CSN name and id from Custom setting TaskAutomation__c
        for(Account acc : mapIDOppParentAcc.values()){
            /*If(acc.Onboarding__r!=null)
            {
                accOnboardIdSet.add(acc.Id);
            }*/
            System.debug('acc.Onboarding__r**********'+acc.Onboarding__r);
            For(Onboarding__c onboardObj : acc.Onboarding__r)
            {
                if(!accIdVsOnboardRecTyp.containsKey(onboardObj.Account_Name__c))
                {
                    onboardRecTypeId=new Set<Id>();
                    onboardRecTypeId.add(onboardObj.RecordTypeId);
                    accIdVsOnboardRecTyp.put(onboardObj.Account_Name__c,onboardRecTypeId);
                }else{accIdVsOnboardRecTyp.get(onboardObj.Account_Name__c).add(onboardObj.RecordTypeId);}}
            Map<String,String> mapRoleVsuserID=new Map<String,String>();
            for(AccountTeamMember actTeam : acc.AccountTeamMembers){
                mapRoleVsuserID.put(actTeam.TeamMemberRole,actTeam.UserId);
            }
            mapAccountIdTeam.put(acc.Id,mapRoleVsuserID);
        }
        System.debug('accIdVsOnboardRecTyp****************************'+accIdVsOnboardRecTyp);
        for(Opportunity objOppty : newMapOppty.values()){
            //.................Getting the Id of User from Account Team .............................
            if(mapAccountIdTeam.containsKey(objOppty.AccountID)){
                AssignTo_CSC=mapAccountIdTeam.get(objOppty.AccountID).keySet().contains('CS - HCloud - Implement/Onboard')?mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Implement/Onboard'):mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Assigned CSC');
            }
            //System.debug('AssignTo_CSC*********'+AssignTo_CSC);
            //..........................ENDS HERE....................................................
            //System.debug('====> '+ objOppty.AccountId);
            //System.debug('***** '+ accIdVsOnboardRecTyp);
            //System.debug('##### '+ cIdVsOnboardRecTyp.get(objOppty.AccountId).size());
            
            if(accIdVsOnboardRecTyp.containsKey(objOppty.AccountId) && accIdVsOnboardRecTyp.get(objOppty.AccountId).size()==1 && AssignTo_CSC!='')
            {
                System.Debug('#Checkpoint 1***************');
                for(Id recordTypeId : accIdVsOnboardRecTyp.get(objOppty.AccountId))
                {
                    System.Debug('#Checkpoint 2***************'+EMIRecordTypeId);
                    System.Debug('#Checkpoint 3***************'+recordTypeId);
                    if(recordTypeId==EMIRecordTypeId)// && objOppty.Product__c=='CSN'
                    {
                        System.Debug('#Checkpoint 4***************');
                        if(((objOppty.Parent_Upsell__c=='Primary'  && objOppty.NBB_Renewal__c=='NBB') || (objOppty.Parent_Upsell__c=='Upsell')) 
                        && 
                        ((objOppty.License_Type__c=='1 Diamond' && (mapIDOppParentAcc.containsKey(objOppty.AccountId) && mapIDOppParentAcc.get(objOppty.AccountId).Country_Region__c!=null && mapIDOppParentAcc.get(objOppty.AccountId).Country_Region__c !='America' && mapIDOppParentAcc.get(objOppty.AccountId).Country_Region__c !='Canada'))
                        ||
                        objOppty.License_Type__c=='2 Diamond' || objOppty.License_Type__c=='3 Diamond' || objOppty.License_Type__c=='4 Diamond'  
                        )
                        ){
                            System.debug('Inside If');
                            onboardingObj = new Onboarding__c();
                            onboardingObj.RecordTypeId=CSNSupplierRecordTypeId;
                            onboardingObj.Status__c='Open';
                            onboardingObj.OwnerId=AssignTo_CSC;
                            onboardingObj.Opportunity_Name__c=objOppty.Id;
                            onboardingObj.Account_Name__c=objOppty.AccountId!=null?objOppty.AccountId:null;
                            onboardingList.add(onboardingObj);
                        }
                    }
                    else if(recordTypeId==CSNSupplierRecordTypeId)// && objOppty.Product__c=='EMI'
                    {
                        System.Debug('#Checkpoint 5***************'+CSNSupplierRecordTypeId );
                        System.Debug('#Checkpoint 6***************'+recordTypeId);
                        
                        if((featureSetValue.contains('EliteMeetings-Enhanced Marketing Program')||featureSetValue.contains('EliteMeetings-Premier Marketing Program Digital')||    featureSetValue.contains('EliteMeetings-Premier Marketing Program Digital+Magazine')||featureSetValue.contains('SpeedRFP-Enhanced Visibility Package')||featureSetValue.contains('SpeedRFP-Premier Visibility Package')||featureSetValue.contains('SpeedRFP-Standard Visibility Package')||featureSetValue.contains('EliteMeetings-Standard Marketing Program') )  && ((objOppty.Parent_Upsell__c=='Primary'  && objOppty.NBB_Renewal__c=='NBB') || (objOppty.Parent_Upsell__c=='Upsell')))
                        {
                            System.Debug('#Checkpoint 7***************');
                            onboardingObj = new Onboarding__c();
                            onboardingObj.RecordTypeId=EMIRecordTypeId;
                            onboardingObj.Status__c='Open';
                            onboardingObj.OwnerId=AssignTo_CSC;
                            onboardingObj.Opportunity_Name__c=objOppty.Id;
                            onboardingObj.Account_Name__c=objOppty.AccountId!=null?objOppty.AccountId:null;
                            onboardingList.add(onboardingObj);
                        }
                    }
                }
            }
            else if(!accIdVsOnboardRecTyp.containsKey(objOppty.AccountId))
            {
                if((objOppty.Product__c=='CSN') || (objOppty.Product__c=='EMI')){//If Product=="CSN" then only one Onboarding can be created... In case of "EMI" one more can be cerated through code..............
                    // Onboarding for Diamond License_Type__c........................
                    if(AssignTo_CSC!=null && AssignTo_CSC!=''&& 
                    ((objOppty.Parent_Upsell__c=='Primary'  && objOppty.NBB_Renewal__c=='NBB') || (objOppty.Parent_Upsell__c=='Upsell'))&&((objOppty.License_Type__c=='1 Diamond' && (mapIDOppParentAcc.containsKey(objOppty.AccountId) && mapIDOppParentAcc.get(objOppty.AccountId).Country_Region__c!=null && !mapIDOppParentAcc.get(objOppty.AccountId).Country_Region__c.contains('America') && mapIDOppParentAcc.get(objOppty.AccountId).Country_Region__c !='Canada'))||objOppty.License_Type__c=='2 Diamond' || objOppty.License_Type__c=='3 Diamond' || objOppty.License_Type__c=='4 Diamond')
                    ){
                        System.debug('Inside If');
                        onboardingObj = new Onboarding__c();
                        onboardingObj.RecordTypeId=CSNSupplierRecordTypeId;
                        onboardingObj.Status__c='Open';
                        onboardingObj.OwnerId=AssignTo_CSC;
                        onboardingObj.Opportunity_Name__c=objOppty.Id;
                        onboardingObj.Account_Name__c=objOppty.AccountId!=null?objOppty.AccountId:null;
                        onboardingList.add(onboardingObj);
                    }
                    // Onboarding for FeatureSet..................................
                    else if((featureSetValue.contains('EliteMeetings-Enhanced Marketing Program')||featureSetValue.contains('EliteMeetings-Premier Marketing Program ')||featureSetValue.contains('EliteMeetings-Premier Marketing Program Print')||featureSetValue.contains('SpeedRFP-Enhanced Visibility Package')||
                    featureSetValue.contains('SpeedRFP-Premier Visibility Package')||featureSetValue.contains('SpeedRFP-Standard Visibility Package')||
                    featureSetValue.contains('EliteMeetings-Standard Marketing Program'))&&((objOppty.Parent_Upsell__c=='Primary'  && objOppty.NBB_Renewal__c=='NBB') || (objOppty.Parent_Upsell__c=='Upsell')))
                    {
                        onboardingObj = new Onboarding__c();
                        onboardingObj.RecordTypeId=EMIRecordTypeId;
                        onboardingObj.Status__c='Open';
                        onboardingObj.OwnerId=AssignTo_CSC;
                        onboardingObj.Opportunity_Name__c=objOppty.Id;
                        onboardingObj.Account_Name__c=objOppty.AccountId!=null?objOppty.AccountId:null;
                        onboardingList.add(onboardingObj);
                    }
                }
            }
        }
        if(onboardingList.size()>0){
        //Inserting Onboarding Record..................
        System.debug('onboardingList*********'+onboardingList);
        List<Database.SaveResult> onboardingInsertResult=Database.Insert(onboardingList,true);
        System.debug('onboardingInsertResult*********'+onboardingInsertResult);
        //Updating the Opportunity field that a Onboarding Record is created below that Opportunity through this code.........
        /*for(Integer i=0;i<onboardingInsertResult.size();i++){
        if (onboardingInsertResult.get(i).isSuccess()){
        System.debug('Inside this If');
        Opportunity oppObj=new Opportunity(Id=onboardingList[i].Opportunity_Name__c,Onboarding_Created__c=true);
        oppObjListUpdate.add(oppObj);
        }
        }
        if(oppObjListUpdate.size()>0){
        //Update Opportunity Record.............
        update oppObjListUpdate;
        }*/

        }
        isRunOnboard=true;
    }
    Public static void onAfterUpdatecreateTask(Map<Id,Opportunity> newMapOppty,Map<Id,Opportunity> oldMapOppty){
        Id corpRepId;
        /* 05/06/2016 HSR : Assigning task using the Round Robin Technique. Below is the Custom Setting used for this............................*/
        //    Map<String,TaskRRassignment__c> userIndexVsTaskRRMap = new Map<String,TaskRRassignment__c>(TaskRRassignment__c.getall());
        System.debug('currentIndex===>Inside'+currentIndex);
        System.debug('size============>>>>>>'+size);
        For(TaskRRassignment__c mcs : userIndexVsTaskRRMap.values())
        {
            if(mcs.CurrentAssignment__c)
            {
                currentIndex=Integer.ValueOf(mcs.Name);
            }
        }
        System.debug('Inside Class Method'+currentIndex);
        // below code to make set of Account ids
        isRun=true;
        List<TaskRRassignment__c> taskRRAssignList=new List<TaskRRassignment__c>();
        List<Opportunity> oppObjList=new List<Opportunity>();
        Set<Id> setAccountIds =new Set<Id>();
        Set<String> MSAcode=new Set<String>();
        Set<ID> setOpportunityID=new Set<Id>();
        Map<Id,Id> opptyIdVsAccIdMap=new Map<Id,Id>();
        Map<String,Multi_Property_Bundles__c> mapoppIdVsMSACampaign=new Map<String,Multi_Property_Bundles__c>();
        Map<ID,List<OpportunityLineItem>> mapoppIdVsFeatureSets=new Map<ID,List<OpportunityLineItem>>();
        Integer CSNPlannerFeatureCount = 0;
        String AssignTo_AMCSN;
        List<Multi_Property_Bundles__c> multiPropertyList=new List<Multi_Property_Bundles__c>();
        String AssignTo_AmEvent,AssignTo_AMSurvey,AssignTo_Sourcing,AssignTo_SourcingRep,AssignTo_CrowdCompassEvent,AssignTo_CSRep,AssignTo_CSC,AssignTo_CSHCloudRep;
        for(Opportunity objOppty:newMapOppty.values()){
            opptyIdVsAccIdMap.put(objOppty.id,objOppty.AccountId);
            setAccountIds.add(objOppty.AccountId);
            MSAcode.add(objOppty.MSA_Code__c);
            setOpportunityID.add(objOppty.id);
        }// End here
        /*  
        Get opportunity related Feature set and build map   
        */
        List<OpportunityLineItem> listFeatureset;
        for(OpportunityLineItem objFeature:[select Product__c,Contract_Start_Date__c,Contract_End_Date__c,End_Date__c,Start_Date__c,Per_Item_Fee__c,Product_Name__c,OpportunityId,of_Items__c,of_Comp_Items_Hrs__c,name,Product_Family__c from OpportunityLineItem where OpportunityId in :setOpportunityID]){
            if(objFeature.Product_Family__c=='CSN-Planner Feature'){
                CSNPlannerFeatureCount++;
            }
            
            if(mapoppIdVsFeatureSets.keySet().contains(objFeature.OpportunityId)){
                mapoppIdVsFeatureSets.get(objFeature.OpportunityId).add(objFeature);
            }else{
                listFeatureset=new List<OpportunityLineItem>();
                listFeatureset.add(objFeature);
                mapoppIdVsFeatureSets.put(objFeature.OpportunityId,listFeatureset);
            }
        }  // End here 
        RecordType MASRecordtYpe=[SELECT DeveloperName,Id,Name FROM RecordType WHERE DeveloperName = 'MSA'];
        List<Multi_Property_Bundles__c> listMSACampaign=new List<Multi_Property_Bundles__c>();
        for(Multi_Property_Bundles__c objMSACampign:[Select Account__r.OwnerId,TaskCreated__c,Account__c,ownerID,MSA_Code__c,End_Date__c,Start_Date__c from Multi_Property_Bundles__c where MSA_Code__c IN : MSAcode AND RecordTypeId=:MASRecordtYpe.Id AND TaskCreated__c=false ORDER BY CreatedDate DESC]){//Account__c in : setAccountIds  AND Opportunity__c in :setOpportunityID
            if(!mapoppIdVsMSACampaign.containsKey(objMSACampign.MSA_Code__c))
            {
                mapoppIdVsMSACampaign.put(String.valueOf(objMSACampign.MSA_Code__c),objMSACampign);
                setAccountIds.add(objMSACampign.Account__c);
            }
            /*if(!mapoppIdVsMSACampaign.keySet().contains(objMSACampign.MSA_Code__c)){
                mapoppIdVsMSACampaign.get(objMSACampign.MSA_Code__c).add(objMSACampign);
            }else{
                listMSACampaign=new List<Multi_Property_Bundles__c>();
                listMSACampaign.add(objMSACampign);
                mapoppIdVsMSACampaign.put(objMSACampign.MSA_Code__c,listMSACampaign);
            }*/
        }  // End here  MSA Campaign 
        Map<Id,Mobile_Card__c> mapIdOppVsMobile=new Map<Id,Mobile_Card__c>();
        For(Opportunity oppObj :[SELECT Id,(SELECT Event_Date__c FROM Cards_CC__r ORDER BY Event_Date__c limit 1) FROM Opportunity WHERE Id in : setOpportunityID])
        {
            if(oppObj.Cards_CC__r.size()>0)
            mapIdOppVsMobile.put(oppObj.Id,oppObj.Cards_CC__r[0]);
        }
        // End Here
        Map<Id,Account> mapIDOppParentAcc=new Map<ID,Account>([Select Original_A_C_Owner__c,OwnerId,CS_Rep__c,Country_Region__c,AM_Event__c,AM_CSN__c,AM_Survey__c, AM_PA__c,PA_Rep__c,AM_CrowdCompass__c,(Select Id, AccountId,UserId,TeamMemberRole From AccountTeamMembers) from Account where id in:setAccountIds]);      
        sySTEM.DEBUG('mapIDOppParentAcc===>>>>'+mapIDOppParentAcc);
        /*11/1/2017 : HSR : Querying the Task with a some specified Subject Line so that these task can't be created again*/
        Set<String> subjectSet = new Set<String>();
        For(Task taskObj : [SELECT Id, Subject FROM Task WHERE AccountId IN : setAccountIds AND (Subject = 'Diamond Client - Client Check In' 
                            OR Subject = '1 Diamond Contract Signed – Reach Out' 
                            OR Subject = 'Renewal INTL Diamond Client - Check in with property'
                            OR Subject LIKE 'Follow up for Sourcing – New Client%')])
                            {
                                if(taskObj.Subject.StartsWith('Follow up for Sourcing – New Client'))
                                {subjectSet.add('Follow up for Sourcing – New Client');}
                                else
                                subjectSet.add(taskObj.Subject);
                            }
        System.debug('subjectSet*****************'+subjectSet);
        /*............................ENDS HERE....................................*/
        
        Map<ID,Map<String,String>> mapAccountIdTeam=new Map<Id,Map<String,String>>();
        // Get AM-CSN name and id from Custom setting TaskAutomation__c
        for(Account acc:mapIDOppParentAcc.values()){
            Map<String,String> mapRoleVsuserID=new Map<String,String>();
            for(AccountTeamMember actTeam : acc.AccountTeamMembers){
                SYSTEM.DEBUG('actTeam.TeamMemberRole===>>>'+actTeam.TeamMemberRole);
                mapRoleVsuserID.put(actTeam.TeamMemberRole,actTeam.UserId);
            }
            System.debug('mapRoleVsuserID===>>>>'+mapRoleVsuserID);
            mapAccountIdTeam.put(acc.Id,mapRoleVsuserID);
        
        }
        System.debug('mapAccountIdTeam===>>>>'+mapAccountIdTeam);
        /*
        CODE COMMENTED BY HEMANT -- New Code is below we will put a query on User record to make this Map
        Map<String,TaskAutomation__c> mapIdTaskAutomtaion=TaskAutomation__c.getAll();
        Map<String,String> mapNameVSID=new Map<String,String>();
        for(TaskAutomation__c taskCSettingObj:mapIdTaskAutomtaion.values()){
        mapNameVSID.put(taskCSettingObj.User_Name__c,taskCSettingObj.User_Id__c);
        }*/
        // end here
        //New Code for making the UserName and UserId Map By Hemant
        Map<String,String> mapNameVSID=new Map<String,String>();
        List<User> userObject=new List<User>([SELECT Id,Name FROM User WHERE UserType='Standard' AND IsPortalEnabled = false AND IsActive = true]);
        for(User userRecord : userObject){
            if(!mapNameVSID.keySet().contains(userRecord.Name))
                mapNameVSID.put(userRecord.Name,userRecord.Id);
        }
        List<Task> listInsertTask=new List<Task>();
        // list of task to be inserted
        system.debug('*********-------newMapOppty.values()'+newMapOppty.values()+'***---'+newMapOppty.size());
        System.debug('mapNameVSID****************'+mapNameVSID);
        
        for(Opportunity objOppty : newMapOppty.values()){
            //System.debug('*************'+mapIDOppParentAcc.get(objOppty.AccountID).PA_Rep__c);
            //System.debug('**********sdhsadffg***'+mapNameVSID.get(mapIDOppParentAcc.get(objOppty.AccountID).PA_Rep__c));
            //System.debug('objOppty.License_Type__c===>'+objOppty.License_Type__c);
            String contractStartDate=(objOppty.ContractStartDate__c!=null?objOppty.ContractStartDate__c.format():'');
            STring contractEndDate=(objOppty.ContractEndDate__c!=null?objOppty.ContractEndDate__c.format():'');
            // Assign Task Code here 
            /* 05/16/2016 HSR: Changed the assignment of task from user field in the account to Account Team Member.*/
            if(mapAccountIdTeam.containsKey(objOppty.AccountID)){
                /*AT : 5th March 2017 : Changed the AM - CSN to AM - HC .....*/
                AssignTo_AMCSN=mapAccountIdTeam.get(objOppty.AccountID).keySet().contains('AM - HC')?mapAccountIdTeam.get(objOppty.AccountID).get('AM - HC'):null;
                AssignTo_AmEvent=mapAccountIdTeam.get(objOppty.AccountID).keySet().contains('AM - Event')?mapAccountIdTeam.get(objOppty.AccountID).get('AM - Event'):(mapAccountIdTeam.get(objOppty.AccountID).keySet().contains('Multi-Product')?mapAccountIdTeam.get(objOppty.AccountID).get('Multi-Product'):null);
                
                AssignTo_CrowdCompassEvent=mapAccountIdTeam.get(objOppty.AccountID).keySet().contains('AM - CrowdCompass')?mapAccountIdTeam.get(objOppty.AccountID).get('AM - CrowdCompass'):(mapAccountIdTeam.get(objOppty.AccountID).keySet().contains('Multi-Product')?mapAccountIdTeam.get(objOppty.AccountID).get('Multi-Product'):null);
                AssignTo_AMSurvey=mapAccountIdTeam.get(objOppty.AccountID).keySet().contains('AM - Inquisium')?mapAccountIdTeam.get(objOppty.AccountID).get('AM - Inquisium'):(mapAccountIdTeam.get(objOppty.AccountID).keySet().contains('Multi-Product')?mapAccountIdTeam.get(objOppty.AccountID).get('Multi-Product'):null);
                AssignTo_CSC=mapAccountIdTeam.get(objOppty.AccountID).keySet().contains('CS - HCloud - Implement/Onboard')?mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Implement/Onboard'):mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Assigned CSC');
            }
            if(mapIDOppParentAcc.containsKey(objOppty.AccountID)){
                AssignTo_SourcingRep=mapIDOppParentAcc.get(objOppty.AccountID).PA_Rep__c!=null?(mapNameVSID.containsKey(mapIDOppParentAcc.get(objOppty.AccountID).PA_Rep__c)?mapNameVSID.get(mapIDOppParentAcc.get(objOppty.AccountID).PA_Rep__c):null):null;
                AssignTo_Sourcing=mapIDOppParentAcc.get(objOppty.AccountID).AM_PA__c!=null?(mapNameVSID.containsKey(mapIDOppParentAcc.get(objOppty.AccountID).AM_PA__c)?mapNameVSID.get(mapIDOppParentAcc.get(objOppty.AccountID).AM_PA__c):null):null;//mapNameVSID.get(mapIDOppParentAcc.get(objOppty.AccountID).AM_PA__c);
                AssignTo_CSRep=mapIDOppParentAcc.get(objOppty.AccountID).CS_Rep__c!=null?(mapNameVSID.containsKey(mapIDOppParentAcc.get(objOppty.AccountID).CS_Rep__c)?mapNameVSID.get(mapIDOppParentAcc.get(objOppty.AccountID).CS_Rep__c):null):null;//mapNameVSID.get(mapIDOppParentAcc.get(objOppty.AccountID).CS_Rep__c);
            }
            System.debug('mapAccountIdTeam=======>>'+mapAccountIdTeam);
            System.debug('AssignTo_SourcingRep=======>>'+AssignTo_SourcingRep);
            corpRepId=mapAccountIdTeam.containsKey(objOppty.AccountID)?(mapAccountIdTeam.get(objOppty.AccountID).keySet().contains('CS - HCloud - Corporate Rep')?              mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Corporate Rep'):null):null;
    
            System.debug('corpRepId====>>>>'+corpRepId);
            System.debug('AssignTo_AmEvent======>'+AssignTo_AmEvent);
            
            System.debug('AssignTo_CSC====>'+AssignTo_CSC);
            System.debug('AssignTo_AMCSN===>'+AssignTo_AMCSN); 
            // End here     
            if(objOppty.EMI_Correlated_Ad_included__c=='White Label – Pro' && AssignTo_CSC!=null)
            {
                Task objTask=new Task();
                objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                objTask.subject='SRFP PRO Button Comped – Reach Out';
                objTask.ActivityDate=system.today().addDays(1);  
                objTask.OwnerId=AssignTo_CSC;//mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Implement/Onboard');  
                listInsertTask.add(objTask);
            }
            /*Survey ---> Professional Services Condition*/
            //System.debug('#Checkpoint*****'+objOppty.License_Type__c+'****'+objOppty.Product__c+'**'+objOppty.MYD_Deal__c+'***'+AssignTo_AMSurvey);
            if(objOppty.License_Type__c=='Professional Services' && objOppty.Product__c=='Survey' && objOppty.MYD_Deal__c=='First Year' && AssignTo_AMSurvey!=null)
            {
                Task objTask=new Task();
                objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                objTask.subject='New PSG Project';
                objTask.ActivityDate=system.today();  
                objTask.OwnerId=AssignTo_AMSurvey;
                // Need to replace by AM – CSN (Account Level)
                listInsertTask.add(objTask);
                objTask=new Task();
                objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                objTask.subject='PSG Project/Hours Expiring - Contact for Upsell/Renewal';
                objTask.ActivityDate=objOppty.ContractEndDate__c!=null?objOppty.ContractEndDate__c.addDays(-120):null;   
                objTask.OwnerId=AssignTo_AMSurvey;
                // Need to replace by AM – CSN (Account Level)
                listInsertTask.add(objTask);
            }
            /*  SOCIAL WALL Condition
            */
            if(objOppty.License_Type__c=='Social Wall'&& objOppty.MYD_Deal__c=='First Year')// && corpRepId!=null)
            {
                if(corpRepId==null)
                {
                    System.debug('inside if');
                    corpRepId=mapIDOppParentAcc.containsKey(objOppty.Accountid)
                    ?(mapIDOppParentAcc.get(objOppty.Accountid).Country_Region__c!=null?(mapIDOppParentAcc.get(objOppty.Accountid).Country_Region__c.contains('America')?RoundRobinAssignment():mapNameVSID.get('Kurt Haorokcham')):mapNameVSID.get('Kurt Haorokcham')):mapNameVSID.get('Kurt Haorokcham');
                }
                System.debug('corpRepId=Inside===>>>>'+corpRepId);
                if(corpRepId!=null){
                    Task objTask=new Task();
                    objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                    objTask.subject='Social Wall - Reach out for Implementation';
                    objTask.ActivityDate=system.today().addDays(1); 
                    
                    /*17/05/2016 : assignment by Round Robin Technique */
                    //objTask.OwnerId=mapAccountIdTeam.get(objOppty.AccountID).keySet().contains('CS - HCloud - Corporate Rep')?mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Corporate Rep'):(mapIDOppParentAcc.get(objOppty.Accountid).Country_Region__c.contains('America')?RoundRobinAssignment():mapNameVSID.get('Kurt Haorokcham'));//mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Corporate Rep');
                    // Need to replace by AM – CSN (Account Level)
                    objTask.OwnerId=corpRepId;
                    listInsertTask.add(objTask);
                }
            }
            /*  1. DIAMOND TASKS Condtions
            */
            System.debug('mapIDOppParentAcc=======>>>'+mapIDOppParentAcc);
            if((objOppty.License_Type__c=='1/2 Diamond' || objOppty.License_Type__c=='1 Diamond' || objOppty.License_Type__c=='2 Diamond' || objOppty.License_Type__c=='3 Diamond' || objOppty.License_Type__c=='4 Diamond')){
                System.debug('objOppty.License_Type__c===>>'+objOppty.License_Type__c);
                if( objOppty.Parent_Upsell__c=='Primary'  && objOppty.NBB_Renewal__c=='NBB'&& objOppty.MYD_Deal__c=='First Year'){
                    Task objTask;
                    if(AssignTo_AMCSN!=null){
                        objTask =new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject='New Client-(Property Level) NBB-First CRM';
                        objTask.ActivityDate=objOppty.ContractStartDate__c!=null?objOppty.ContractStartDate__c.addDays(60):null;  
                        objTask.OwnerId=AssignTo_AMCSN;system.debug('*******'+objTask);
                        // Need to replace by AM – CSN (Account Level)
                        listInsertTask.add(objTask);
                        System.debug('listInsertTask===>'+listInsertTask);
                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);//contractEndDate contractStartDate
                        objTask.subject='Renewal (Property Level) ('+objOppty.License_Type__c+')(Date of Renewal -'+contractEndDate+')';
                        objTask.ActivityDate=objOppty.ContractEndDate__c!=null?objOppty.ContractEndDate__c.addDays(-120):null;  
                        objTask.OwnerId=AssignTo_AMCSN;system.debug('*******'+objTask);
                        // Need to replace by AM – CSN (Account Level)
                        listInsertTask.add(objTask);
                    }
                    /*
                    Added : HSR 
                    New task added 25th Apr 2016
                    */
                    //System.debug('country region===>'+mapIDOppParentAcc.get(objOppty.Accountid).Country_Region__c);
                    // System.debug('mapIDOppParentAcc.get(objOppty.Accountid).Country_Region__c.contains()=====>'+mapIDOppParentAcc.get(objOppty.Accountid).Country_Region__c.contains('America'));
                    /*Added By HSR : 31st May : Subject and Due Date is being Updated */
                    if(!subjectSet.contains('1 Diamond Contract Signed – Reach Out') && objOppty.License_Type__c=='1 Diamond' &&  mapIDOppParentAcc.containsKey(objOppty.Accountid) &&  mapIDOppParentAcc.get(objOppty.Accountid).Country_Region__c.contains('America') && AssignTo_CSC!=null)
                    {
                        System.debug('Inside This If');
                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject='1 Diamond Contract Signed – Reach Out';
                        objTask.ActivityDate=system.today().addDays(30);//objOppty.Contract_Implemented_Date__c!=null?objOppty.Contract_Implemented_Date__c.addDays(30):null;  
                        objTask.OwnerId=AssignTo_CSC;system.debug('*******'+objTask);
                        // Need to replace by AM – CSN (Account Level)
                        listInsertTask.add(objTask);
                    }
                    System.debug('listInsertTask===>'+listInsertTask);
                }
                else if(!subjectSet.contains('1 Diamond Contract Signed – Reach Out') && objOppty.Parent_Upsell__c=='Upsell' && objOppty.License_Type__c=='1 Diamond' &&  mapIDOppParentAcc.containsKey(objOppty.Accountid) &&  mapIDOppParentAcc.get(objOppty.Accountid).Country_Region__c.contains('America') && AssignTo_CSC!=null)
                {
                    System.debug('Inside This If');
                    Task objTask=new Task();
                    objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                    objTask.subject='1 Diamond Contract Signed – Reach Out';
                    objTask.ActivityDate=system.today().addDays(30);//objOppty.Contract_Implemented_Date__c!=null?objOppty.Contract_Implemented_Date__c.addDays(30):null;  
                    objTask.OwnerId=AssignTo_CSC;system.debug('*******'+objTask);
                    // Need to replace by AM – CSN (Account Level)
                    listInsertTask.add(objTask);
                }
                else if( objOppty.Parent_Upsell__c=='Primary'  && objOppty.NBB_Renewal__c=='Renewal'&& objOppty.MYD_Deal__c=='First Year'){
                    System.debug('31st May====>>>>');
                    Task objTask;
                    if(AssignTo_AMCSN!=null){
                        if(!subjectSet.contains('Diamond Client - Client Check In')){
                            objTask=new Task();
                            objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                            objTask.subject='Diamond Client - Client Check In';
                            objTask.ActivityDate=objOppty.ContractStartDate__c!=null?objOppty.ContractStartDate__c.addDays(60):null;  
                            objTask.OwnerId=AssignTo_AMCSN; 
                            listInsertTask.add(objTask);
                        }
                        // 2nd Task
                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject='Renewal (Property Level)('+String.valueOf(objOppty.License_Type__c)+') (Date of Renewal - '+contractEndDate+')';
                        objTask.ActivityDate=objOppty.ContractEndDate__c!=null?objOppty.ContractEndDate__c.addDays(-120):null;  
                        objTask.OwnerId=AssignTo_AMCSN; 
                        listInsertTask.add(objTask);
                    }
                    if(!subjectSet.contains('Renewal INTL Diamond Client - Check in with property') && AssignTo_CSC!=null && mapIDOppParentAcc.keyset().contains(objOppty.Accountid) && (mapIDOppParentAcc.get(objOppty.Accountid).Country_Region__c!='North America' && mapIDOppParentAcc.get(objOppty.AccountId).Country_Region__c!='South America')){
                        System.Debug('31st May 2nd===>>');
                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject='Renewal INTL Diamond Client - Check in with property';
                        objTask.ActivityDate=system.today().addDays(1);  
                        //mapAccountIdTeam.get(objOppty.AccountID).keyset().contains('CS - HCloud - Implement/Onboard')?mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Implement/Onboard'):objOppty.addError('Please assign CS - HCloud - Implement/Onboard Role to Account Team Member'); 
                        objTask.OwnerId=AssignTo_CSC;//mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Implement/Onboard');
                        listInsertTask.add(objTask);
                    }
                //System.debug('*******'+objOppty.Parent_Upsell__c+'****'+objOppty.NBB_Renewal__c+'****'+objOppty.MYD_Deal__c+'******'+AssignTo_AMCSN);
                }
                else if( objOppty.Parent_Upsell__c=='Upsell'  && (objOppty.NBB_Renewal__c=='' || objOppty.NBB_Renewal__c=='NBB' || objOppty.NBB_Renewal__c=='Renewal' || objOppty.NBB_Renewal__c=='NBB Repeated')&& objOppty.MYD_Deal__c=='First Year'){
                    Task objTask;
                    if(AssignTo_AMCSN!=null){
                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject='Diamond Upsell- CRM';
                        objTask.ActivityDate=objOppty.ContractStartDate__c!=null?objOppty.ContractStartDate__c.addDays(45):null;  
                        objTask.OwnerId=AssignTo_AMCSN;  
                        listInsertTask.add(objTask);
                    }
                    /*
                    Added : HSR 
                    New task added 25th Apr 2016
                    */
                    if(AssignTo_CSC!=null && objOppty.License_Type__c=='1 Diamond' && mapIDOppParentAcc.get(objOppty.Accountid).Country_Region__c.contains('America'))
                    {
                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject='1 Diamond Upsell (Domestic)';
                        objTask.ActivityDate=system.today().addDays(1);//objOppty.Contract_Implemented_Date__c!=null?objOppty.Contract_Implemented_Date__c.addDays(1):null;  
                        objTask.OwnerId=AssignTo_CSC;system.debug('*******'+objTask);
                        // Need to replace by AM – CSN (Account Level)
                        listInsertTask.add(objTask);
                    }
                }
            }// End outer if and BUNDLE TASKS condtions below
            // DIAMOND PLUS TASKS
            else if(objOppty.License_Type__c=='Diamond Plus'&& objOppty.MYD_Deal__c=='First Year' && AssignTo_CSC!=null){
                System.debug('Inside Dimond Plus');
                Task objTask=new Task();
                objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                System.debug('contractStartDate========>'+contractStartDate);
                objTask.Subject='Diamond Plus Ad (Start Date - '+contractStartDate+') - Reach out and share ad ';
                objTask.ActivityDate=system.today().addDays(1);   
                objTask.OwnerId=AssignTo_CSC;//mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Implement/Onboard');  
                System.debug('objTask===>'+objTask);
                listInsertTask.add(objTask);
            } // PROMO HUB TASKS
            else if(AssignTo_CSC!=null && objOppty.License_Type__c=='Promo Hub - Gold' || objOppty.License_Type__c=='Promo Hub - Silver'&& objOppty.MYD_Deal__c=='First Year'){
                Task objTask=new Task();
                objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                objTask.subject='Promotion Hub (Start Date -'+contractStartDate+')('+ String.valueOf(objOppty.License_Type__c)+')- Collect content';
                objTask.ActivityDate=system.today().addDays(1);  
                objTask.OwnerId=AssignTo_CSC;//mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Implement/Onboard');  
                listInsertTask.add(objTask);
                System.debug('inside else if===>'+listInsertTask);
            }  //COMPETITIVE MARKET AD TASKS
            else if(AssignTo_CSC!=null && objOppty.License_Type__c=='Competitive Market Ad'&& objOppty.MYD_Deal__c=='First Year'){
                Task objTask=new Task();
                objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                objTask.subject='Competitive Market Ad (Start Date - '+contractStartDate+')- Reach out and share ad ';
                objTask.ActivityDate=system.today().addDays(1);  
                objTask.OwnerId=AssignTo_CSC;//mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Implement/Onboard') ;  
                listInsertTask.add(objTask);
            } //CSN ENTERPRISE/PROFESSIONAL LICENSE (FEATURE BUNDLE) TASKS
            else if( objOppty.License_Type__c=='Supplier Feature - Enterprise Package'&& objOppty.MYD_Deal__c=='First Year'){// && corpRepId!=null){
                if(corpRepId==null)
                {
                    System.debug('inside if'+corpRepId);
                    corpRepId=mapIDOppParentAcc.containsKey(objOppty.Accountid)
                    ?(mapIDOppParentAcc.get(objOppty.Accountid).Country_Region__c!=null?(mapIDOppParentAcc.get(objOppty.Accountid).Country_Region__c.contains('America')?RoundRobinAssignment():mapNameVSID.get('Kurt Haorokcham')):mapNameVSID.get('Kurt Haorokcham')):mapNameVSID.get('Kurt Haorokcham');
                }
                System.debug('Inside This To Check ROUNDROBIN===>'+corpRepId);
                if(corpRepId!=null){
                    System.debug('Chende Value Goes Inside If'+corpRepId);
                    Task objTask=new Task();
                    objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                    objTask.subject='CSN Enterprise License - Reach out for Implementation ';
                    objTask.ActivityDate=system.today().addDays(1);  
                    /*17/05/2016 : assignment by Round Robin Technique */
                    objTask.OwnerId=corpRepId;
                    //objTask.OwnerId=mapAccountIdTeam.get(objOppty.AccountID).keySet().contains('CS - HCloud - Corporate Rep')?mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Corporate Rep'):(mapIDOppParentAcc.get(objOppty.Accountid).Country_Region__c.contains('America')?RoundRobinAssignment():mapNameVSID.get('Kurt Haorokcham'));//mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Corporate Rep');
                    //objTask.OwnerId=mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Corporate Rep');  
                    listInsertTask.add(objTask);
                }
            }//EVENT TASKS
            else if((objOppty.License_Type__c=='Prepayment - Registrations Fee' || objOppty.License_Type__c=='Prepayment - Events Fee'||objOppty.License_Type__c=='Prepayment - Transactions Fee' || objOppty.License_Type__c=='Event Feature' || objOppty.License_Type__c=='CSN Planner') || objOppty.Product__c=='Event'){
                //System.debug('objOppty.License_Type__c********'+objOppty.License_Type__c);
                //System.debug('objOppty.Parent_Upsell__c********'+objOppty.Parent_Upsell__c);
                //System.debug('objOppty.NBB_Renewal__c********'+objOppty.NBB_Renewal__c);
                //System.debug('objOppty.MYD_Deal__c********'+objOppty.MYD_Deal__c);
               
                if(objOppty.Parent_Upsell__c=='Primary'  && objOppty.NBB_Renewal__c=='NBB' && objOppty.MYD_Deal__c=='First Year'){
                    //System.debug('#Checkpoint Inside This One'+AssignTo_SourcingRep);
                    //System.debug('#Checkpoint Inside This One'+subjectSet.contains('Follow up for Sourcing – New Client'));
                    // 1st Task
                    Task objTask;
                    if(AssignTo_AmEvent!=null){
                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject='Call for renewal '+contractEndDate;
                        objTask.ActivityDate=objOppty.ContractEndDate__c!=null?objOppty.ContractEndDate__c.addDays(-180):null;  
                        objTask.OwnerId=AssignTo_AmEvent;  // Need to replace by AM – CSN (Account Level)
                        listInsertTask.add(objTask);
                        // 2nd Task
                        if(objOppty.OptOutDate__c!=null){
                            objTask=new Task();
                            objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                            objTask.subject='Opt Out - Event';
                            objTask.ActivityDate=objOppty.OptOutDate__c;  
                            objTask.OwnerId=AssignTo_AmEvent;  // Need to replace by AM – CSN (Account Level)
                            listInsertTask.add(objTask);
                        }
                        // 4th Task
                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject='New client; schedule kickoff and internal ATI review';
                        objTask.ActivityDate=system.today();  
                        objTask.OwnerId=AssignTo_AmEvent;  // Need to replace by AM – CSN (Account Level)
                        listInsertTask.add(objTask);
                    }
                    if(AssignTo_SourcingRep!=null && !subjectSet.contains('Follow up for Sourcing – New Client') && CSNPlannerFeatureCount==0){
                        System.debug('Inside AssignTo_SourcingRep');
                        // 5th Task
                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject='Follow up for Sourcing – New Client';
                        objTask.ActivityDate=system.today();  
                        objTask.OwnerId=AssignTo_SourcingRep;  // Need to replace by AM – CSN (Account Level)
                        listInsertTask.add(objTask);
                    }
                } //Event Renewal – all conditions
                /*Added : HSR 
                Changes of adding PRODUCT='EVENT' at 25th April*/
                if(objOppty.Parent_Upsell__c=='Primary'  && objOppty.NBB_Renewal__c=='Renewal' && objOppty.MYD_Deal__c=='First Year'){// && (objOppty.Opp_Owner_Role__c=='Direct Sales (Event)' || objOppty.Opp_Owner_Role__c=='AM (Event)') Changes of SignUp4_Conversion__c is done here              
                    if(objOppty.SignUp4_Conversion__c)
                    {
                        System.Debug('Inside Event If');
                        Task objTask;
                        if(AssignTo_AmEvent!=null){
                            objTask=new Task();
                            objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                            objTask.subject='Call for renewal '+contractEndDate;
                            objTask.ActivityDate=objOppty.ContractEndDate__c!=null?objOppty.ContractEndDate__c.addDays(-180):null;  
                            objTask.OwnerId=AssignTo_AmEvent;  // Need to replace by AM – CSN (Account Level)
                            listInsertTask.add(objTask);
                            /*Added : HSR 
                            Remove below task at 25th April*/
                            // 2nd Task
                            if(objOppty.OptOutDate__c!=null){
                                objTask=new Task();
                                objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                                objTask.subject='Opt out - Event';
                                objTask.ActivityDate=objOppty.OptOutDate__c;  
                                objTask.OwnerId=AssignTo_AmEvent;  // Need to replace by AM – CSN (Account Level)
                                listInsertTask.add(objTask);
                            }
                            // 4th Task
                            objTask=new Task();
                            objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                            objTask.subject='New client; schedule kickoff and internal ATI review';
                            objTask.ActivityDate=system.today();  
                            objTask.OwnerId=AssignTo_AmEvent;  // Need to replace by AM – CSN (Account Level)
                            listInsertTask.add(objTask);
                        }
                        /*Added : HSR 
                        Remove below task at 25th April*/
                        if(AssignTo_SourcingRep!=null && !subjectSet.contains('Follow up for Sourcing – New Client') && CSNPlannerFeatureCount==0){
                            // 5th Task
                            objTask=new Task();
                            objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                            objTask.subject='Follow up for Sourcing – New Client';
                            objTask.ActivityDate=system.today();  
                            objTask.OwnerId=AssignTo_SourcingRep;  // Need to replace by AM – CSN (Account Level)
                            listInsertTask.add(objTask);
                            /*Added : HSR 
                            Added new task at 25th April*/
                            /*
                             Commented by kumud : Field cleanup activity 6june2018
                            
                            */
                            /*if(objOppty.of_RFPs__c!=null && objOppty.of_RFPs__c>0)
                            {
                                objTask=new Task();
                                objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                                objTask.subject='Follow up for Sourcing – New Client- '+objOppty.of_RFPs__c +' RFP Committed';
                                objTask.ActivityDate=system.today();  
                                objTask.OwnerId=AssignTo_SourcingRep;  // Need to replace by AM – CSN (Account Level)
                                listInsertTask.add(objTask);
                            } */ // end here : Kumud
                            if(objOppty.of_Total_Room_Nights_Committed__c!=null && objOppty.of_Total_Room_Nights_Committed__c>0)
                            {
                                objTask=new Task();
                                objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                                objTask.subject='Follow up for Sourcing – New Client - '+objOppty.of_Total_Room_Nights_Committed__c +' Room Nights Committed';
                                objTask.ActivityDate=system.today();  
                                objTask.OwnerId=AssignTo_SourcingRep;  // Need to replace by AM – CSN (Account Level)
                                listInsertTask.add(objTask);
                            }
                        }
                    }
                    else{
                        System.debug('Inside Event Else');
                        if(AssignTo_AmEvent!=null){
                            Task objTask=new Task();
                            objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                            objTask.subject='Call for renewal '+contractEndDate;
                            objTask.ActivityDate=objOppty.ContractEndDate__c!=null?objOppty.ContractEndDate__c.addDays(-180):null;  
                            objTask.OwnerId=AssignTo_AmEvent;  // Need to replace by AM – CSN (Account Level)
                            listInsertTask.add(objTask);
                            //2nd task
                            if(objOppty.OptOutDate__c!=null){
                                objTask=new Task();
                                objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                                objTask.subject='Opt out Event';
                                objTask.ActivityDate=objOppty.OptOutDate__c;  
                                objTask.OwnerId=AssignTo_AmEvent;  // Need to replace by AM – CSN (Account Level)
                                listInsertTask.add(objTask);
                            }
                        }
                    }
                }
                System.debug('listInsertTask===>'+listInsertTask);
            }//Survey NBB
            else if(AssignTo_AMSurvey!=null && objOppty.License_Type__c=='License-Basic' || objOppty.License_Type__c=='License-Enterprise' ||objOppty.License_Type__c=='License-Premium'||objOppty.License_Type__c=='License-Professional'){
                if(objOppty.Parent_Upsell__c=='Primary'  && objOppty.NBB_Renewal__c=='NBB' && objOppty.MYD_Deal__c=='First Year')
                {
                    //String contractEndDate=(objOppty.ContractEndDate__c!=null?objOppty.ContractEndDate__c.format():null);
                    Task objTask=new Task();
                    objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                    objTask.subject='Call for renewal '+contractEndDate;
                    objTask.ActivityDate=objOppty.ContractEndDate__c!=null?objOppty.ContractEndDate__c.addDays(-180):null;  
                    objTask.OwnerId=AssignTo_AMSurvey;  // Need to replace by AM – CSN (Account Level)
                    listInsertTask.add(objTask);
                    System.debug('************listInsertTask'+listInsertTask);
                    if(objOppty.OptOutDate__c!=null){
                        // 2nd Task
                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject='Opt out - Inquisium';
                        objTask.ActivityDate=objOppty.OptOutDate__c;  
                        objTask.OwnerId=AssignTo_AMSurvey;  // Need to replace by AM – CSN (Account Level)
                        listInsertTask.add(objTask);
                    }
                    // 3rd Task
                    objTask=new Task();
                    objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                    objTask.subject='New client; schedule kickoff and internal ATI review';
                    //objTask.ActivityDate=objOppty.ContractStartDate__c!=null?objOppty.ContractStartDate__c.addDays(60):null;  
                    objTask.ActivityDate=system.today();
                    objTask.OwnerId=AssignTo_AMSurvey;  // Need to replace by AM – CSN (Account Level)
                    listInsertTask.add(objTask);
                }//Event Renewal – all conditions
                else if( objOppty.Parent_Upsell__c=='Primary'  && objOppty.NBB_Renewal__c=='Renewal' && objOppty.MYD_Deal__c=='First Year')// && objOppty.Opp_Owner_Role__c.contains('Survey'))
                {              
                    Task objTask=new Task();
                    objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                    //String contractEndDate=(objOppty.ContractEndDate__c!=null?objOppty.ContractEndDate__c.format():null);
                    objTask.subject='Call for renewal '+contractEndDate;
                    objTask.ActivityDate=objOppty.ContractEndDate__c!=null?objOppty.ContractEndDate__c.addDays(-45):null;  
                    objTask.OwnerId=AssignTo_AMSurvey;  // Need to replace by AM – CSN (Account Level)
                    listInsertTask.add(objTask);
                    if(objOppty.OptOutDate__c!=null){
                        //2nd task
                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject='Opt out - Inquisium';
                        objTask.ActivityDate=objOppty.OptOutDate__c;  
                        objTask.OwnerId=AssignTo_AMSurvey;  // Need to replace by AM – CSN (Account Level)
                        listInsertTask.add(objTask);
                    }
                }
            }
            // CSN PLANNER TASKS 
            if( objOppty.License_Type__c=='CSN Planner' && objOppty.Parent_Upsell__c=='Primary'  && objOppty.NBB_Renewal__c=='NBB' && objOppty.MYD_Deal__c=='First Year')// && objOppty.Opp_Owner_Role__c.contains('Venue Sourcing'))
            {
                Task objTask;
                if(AssignTo_Sourcing!=null){
                    objTask=new Task();
                    objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                    objTask.subject='Call for renewal '+contractEndDate;
                    objTask.ActivityDate=objOppty.ContractEndDate__c!=null?objOppty.ContractEndDate__c.addDays(-60):null;  
                    objTask.OwnerId=AssignTo_Sourcing ;  // Need to replace by AM – CSN (Account Level)
                    listInsertTask.add(objTask);
                    // 2nd Task
                    objTask=new Task();
                    objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                    objTask.subject='Discuss Contract EXTENSION';
                    objTask.ActivityDate=objOppty.ContractStartDate__c!=null?objOppty.ContractStartDate__c.addDays(180):null;  
                    objTask.OwnerId=AssignTo_Sourcing;  // Need to replace by AM – CSN (Account Level)
                    listInsertTask.add(objTask);
                    // 3rd Task
                    objTask=new Task();
                    objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                    objTask.subject='Contract Signed, Setup Implementation Call ';
                    objTask.ActivityDate=system.today().addDays(1);  
                    objTask.OwnerId=AssignTo_Sourcing;  // Need to replace by AM – CSN (Account Level)
                    listInsertTask.add(objTask);
                }
                if(mapAccountIdTeam.containsKey(objOppty.AccountID) && mapAccountIdTeam.get(objOppty.AccountID).containsKey('CS - CSN Planner')){
                    // 4th Task
                    objTask=new Task();
                    objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                    objTask.subject='Create and Deliver Business Review';
                    objTask.ActivityDate=objOppty.ContractEndDate__c!=null?objOppty.ContractEndDate__c.addDays(-30):null;  
                    objTask.OwnerId=mapAccountIdTeam.get(objOppty.AccountID).get('CS - CSN Planner');  // Need to replace by AM – CSN (Account Level)
                    listInsertTask.add(objTask);
                    
                    // 5th Task
                    For(integer i=0;i<=(Integer.ValueOf(objOppty.Years__c)-1);i++)
                    {
                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject='Create and Deliver Business Review';
                        objTask.ActivityDate=objOppty.Opp_End_Date__c!=null?(objOppty.Opp_End_Date__c.addYears(i)).addDays(-30):null;  
                        objTask.OwnerId=mapAccountIdTeam.get(objOppty.AccountID).get('CS - CSN Planner');  // Need to replace by AM – CSN (Account Level)
                        listInsertTask.add(objTask);
                    }
                }
            }else if(AssignTo_Sourcing!=null && objOppty.License_Type__c=='CSN Planner' && objOppty.Parent_Upsell__c=='Primary'  && objOppty.NBB_Renewal__c=='Renewal' && objOppty.MYD_Deal__c=='First Year')// && objOppty.Opp_Owner_Role__c.contains('Venue Sourcing'))
            {
                Task objTask=new Task();
                objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                objTask.subject='Call for renewal '+contractEndDate;
                objTask.ActivityDate=objOppty.ContractEndDate__c!=null?objOppty.ContractEndDate__c.addDays(-60):null;  
                objTask.OwnerId=AssignTo_Sourcing;  // Need to replace by AM – CSN (Account Level)
                listInsertTask.add(objTask);
                if(objOppty.OptOutDate__c!=null){
                    //2nd task
                    objTask=new Task();
                    objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                    objTask.subject='Opt out ends today';
                    objTask.ActivityDate=objOppty.OptOutDate__c;  
                    objTask.OwnerId=AssignTo_Sourcing;  // Need to replace by AM – CSN (Account Level)
                    listInsertTask.add(objTask);
                }
            }
            // CROWDCOMPASS TASKS
            if(objOppty.License_Type__c=='Mobile Events Solutions Fee' && objOppty.Parent_Upsell__c=='Primary'  && objOppty.NBB_Renewal__c=='NBB' && objOppty.MYD_Deal__c=='First Year'){//&&( objOppty.Opp_Owner_Role__c=='Direct Sales (CrowdCompass)' || objOppty.Opp_Owner_Role__c=='Direct Sales (Event)')//Added the SignUp4_Conversion__c condition
                Task objTask;
                if(AssignTo_CrowdCompassEvent!=null){
                    objTask=new Task();
                    objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                    objTask.subject='New client; schedule kickoff and internal ATI review';
                    objTask.ActivityDate=objOppty.ContractReceived__c!=null?objOppty.ContractReceived__c.addDays(30):null;  
                    objTask.OwnerId=AssignTo_CrowdCompassEvent;  // Need to replace by AM – CSN (Account Level)
                    listInsertTask.add(objTask);
                    // 2nd Task
                    objTask=new Task();
                    objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                    objTask.subject='Pre-Event check In';
                    //objTask.ActivityDate=objOppty.ContractStartDate__c!=null?objOppty.ContractStartDate__c.addDays(180):null;  
                    objTask.ActivityDate=mapIdOppVsMobile.get(objOppty.Id)!=null?mapIdOppVsMobile.get(objOppty.Id).Event_Date__c:null;
                    objTask.OwnerId=AssignTo_CrowdCompassEvent;  // Need to replace by AM – CSN (Account Level)
                    listInsertTask.add(objTask);
                    // 3rd Task
                    objTask=new Task();
                    objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                    //String contractEndDate=(objOppty.ContractEndDate__c!=null?objOppty.ContractEndDate__c.format():null);
                    objTask.subject='Call for renewal - CC '+contractEndDate;
                    objTask.ActivityDate=objOppty.ContractEndDate__c!=null?objOppty.ContractEndDate__c.addDays(-90):null;  
                    objTask.OwnerId=AssignTo_CrowdCompassEvent;  // Need to replace by AM – CSN (Account Level)
                    listInsertTask.add(objTask);
                    // 4th Task
                    if(objOppty.OptOutDate__c!=null){
                        
                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject='Opt Out - CC';
                        objTask.ActivityDate=objOppty.OptOutDate__c;  
                        objTask.OwnerId=AssignTo_CrowdCompassEvent;  // Need to replace by AM – CSN (Account Level)
                        listInsertTask.add(objTask);
                    }
                }
                if(mapIDOppParentAcc.containsKey(objOppty.AccountID) && mapIDOppParentAcc.get(objOppty.AccountID).Original_A_C_Owner__c!=null && mapNameVSID.keySet().contains(mapIDOppParentAcc.get(objOppty.AccountID).Original_A_C_Owner__c)){
                    // 5th Task
                    objTask=new Task();
                    objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                    objTask.subject='Set up Handoff Call with AM';
                    objTask.ActivityDate=system.today();  
                    objTask.OwnerId=mapNameVSID.get(mapIDOppParentAcc.get(objOppty.AccountID).Original_A_C_Owner__c);  //mapIDOppParentAcc.get(objOppty.AccountID).Original_A_C_Owner__c;  // Need to replace by AM – CSN (Account Level)
                    listInsertTask.add(objTask);
                }

                //6th Task
                if(objOppty.AccountID!=null && mapIDOppParentAcc.containsKey(objOppty.AccountID) && (UserInfo.getUserRoleId()!='00E00000006tiKxEAI' || UserInfo.getUserRoleId()!='00E00000006uKybEAE')){
                objTask=new Task();
                objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                objTask.subject='CrowdCompass Customer-Cross Sell Event';
                objTask.ActivityDate=objOppty.ContractStartDate__c!=null?objOppty.ContractStartDate__c.addDays(150):null; 
                objTask.OwnerId=mapIDOppParentAcc.get(objOppty.AccountID).OwnerId;//AssignTo_AMEvent;  // Need to replace by AM – CSN (Account Level)
                listInsertTask.add(objTask);}
                // 9th Task
                if(AssignTo_SourcingRep!=null && !subjectSet.contains('Follow up for Sourcing – New Client') && CSNPlannerFeatureCount==0){
                    objTask=new Task();
                    objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                    objTask.subject='Follow up for Sourcing – New Client';//'Follow Up For Sourcing – New Client';
                    objTask.ActivityDate=system.today();  
                    objTask.OwnerId=AssignTo_SourcingRep;  // Need to replace by AM – CSN (Account Level)
                    listInsertTask.add(objTask);
                }
            }
            else if( objOppty.License_Type__c=='Mobile Events Solutions Fee' && objOppty.Parent_Upsell__c=='Primary'  && objOppty.NBB_Renewal__c=='Renewal' && objOppty.MYD_Deal__c=='First Year'){//&&( objOppty.Opp_Owner_Role__c=='AM (CrowdCompass)' || objOppty.Opp_Owner_Role__c=='AM (Event)')
                if(objOppty.SignUp4_Conversion__c)
                {
                    Task objTask;
                    if(AssignTo_CrowdCompassEvent!=null){
                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject='New client; schedule kickoff and internal ATI review';
                        objTask.ActivityDate=objOppty.ContractReceived__c!=null?objOppty.ContractReceived__c.addDays(30):null;  
                        objTask.OwnerId=AssignTo_CrowdCompassEvent;  // Need to replace by AM – CSN (Account Level)
                        listInsertTask.add(objTask);
                        // 2nd Task
                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject='Pre-Event check In';
                        objTask.ActivityDate=mapIdOppVsMobile.get(objOppty.Id)!=null?mapIdOppVsMobile.get(objOppty.Id).Event_Date__c:null;
                        objTask.OwnerId=AssignTo_CrowdCompassEvent;  // Need to replace by AM – CSN (Account Level)
                        listInsertTask.add(objTask);
                        // 3rd Task
                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject='Call for renewal - CC '+contractEndDate;
                        objTask.ActivityDate=objOppty.ContractEndDate__c!=null?objOppty.ContractEndDate__c.addDays(-90):null;  
                        objTask.OwnerId=AssignTo_CrowdCompassEvent;  // Need to replace by AM – CSN (Account Level)
                        listInsertTask.add(objTask);
                        if(objOppty.OptOutDate__c!=null){
                            // 5th Task
                            objTask=new Task();
                            objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                            objTask.subject='Opt Out - CC';
                            objTask.ActivityDate=objOppty.OptOutDate__c;  
                            objTask.OwnerId=AssignTo_CrowdCompassEvent;  // Need to replace by AM – CSN (Account Level)
                            listInsertTask.add(objTask);
                        }
                    }
                    // 4th Task
                    if(mapIDOppParentAcc.containsKey(objOppty.AccountID) && mapIDOppParentAcc.get(objOppty.AccountID).Original_A_C_Owner__c!=null && mapNameVSID.keySet().contains(mapIDOppParentAcc.get(objOppty.AccountID).Original_A_C_Owner__c)){
                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject='Set up Handoff Call with AM';
                        objTask.ActivityDate=system.today();  
                        objTask.OwnerId=mapNameVSID.get(mapIDOppParentAcc.get(objOppty.AccountID).Original_A_C_Owner__c);  // Need to replace by AM – CSN (Account Level)
                        listInsertTask.add(objTask);
                    }
                    if(objOppty.AccountID!=null && mapIDOppParentAcc.containsKey(objOppty.AccountID) && (UserInfo.getUserRoleId()!='00E00000006tiKxEAI' || UserInfo.getUserRoleId()!='00E00000006uKybEAE')){
                    //6th Task
                    objTask=new Task();
                    objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                    objTask.subject='CrowdCompass Customer-Cross Sell Event';
                    objTask.ActivityDate=objOppty.ContractStartDate__c!=null?objOppty.ContractStartDate__c.addDays(150):null; 
                    
                    objTask.OwnerId=mapIDOppParentAcc.get(objOppty.AccountID).OwnerId;//AssignTo_AMEvent;  // Need to replace by AM – CSN (Account Level)
                    listInsertTask.add(objTask);}
                    if(AssignTo_SourcingRep!=null && !subjectSet.contains('Follow up for Sourcing – New Client') && CSNPlannerFeatureCount==0){
                    // 9th Task
                    objTask=new Task();
                    objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                    objTask.subject='Follow up for Sourcing – New Client';//'Follow Up For Sourcing – New Client';
                    objTask.ActivityDate=system.today();  
                    objTask.OwnerId=AssignTo_SourcingRep;  // Need to replace by AM – CSN (Account Level)
                    listInsertTask.add(objTask);}
                }
                else
                {
                    if(AssignTo_CrowdCompassEvent!=null){
                        Task objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject='Call for renewal-CC '+contractEndDate;
                        objTask.ActivityDate=objOppty.ContractEndDate__c!=null?objOppty.ContractEndDate__c.addDays(-90):null;  
                        objTask.OwnerId=AssignTo_CrowdCompassEvent;  // Need to replace by AM – CSN (Account Level)
                        listInsertTask.add(objTask);
                        if(objOppty.OptOutDate__c!=null){
                            //2nd task
                            objTask=new Task();
                            objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                            objTask.subject='Opt out ends today';
                            objTask.ActivityDate=objOppty.OptOutDate__c;  
                            objTask.OwnerId=AssignTo_CrowdCompassEvent;  // Need to replace by AM – CSN (Account Level)
                            listInsertTask.add(objTask);
                        }
                    }
                }
            }
            // Bundle Tasks
            if((objOppty.License_Type__c=='Bundle' || objOppty.License_Type__c=='1/2 Diamond' || objOppty.License_Type__c=='1 Diamond' || objOppty.License_Type__c=='2 Diamond' || objOppty.License_Type__c=='3 Diamond' ) && objOppty.Bundled_Package_Type__c=='Bundled' ){
                if( objOppty.Parent_Upsell__c=='Primary'&& objOppty.MYD_Deal__c=='First Year'){
                    Task objTask;
                    if(AssignTo_AMCSN!=null){
                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject='Bundle Client - Bi Annual Check In';
                        objTask.ActivityDate=objOppty.ContractStartDate__c!=null?objOppty.ContractStartDate__c.addDays(120):null;  
                        objTask.OwnerId=AssignTo_AMCSN;  
                        listInsertTask.add(objTask);
                        // 2nd Task
                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject='Renewal (Property Level) (Bundled) (Date of Renewal - '+contractEndDate+')';
                        objTask.ActivityDate=objOppty.ContractEndDate__c!=null?objOppty.ContractEndDate__c.addDays(-120):null;  
                        objTask.OwnerId=AssignTo_AMCSN;  // Need to replace by AM – CSN (Account Level)
                        listInsertTask.add(objTask);
                    }
                    if(AssignTo_CSC!=null){
                        if(objOppty.NBB_Renewal__c=='NBB' ){
                            System.debug('===>>>>>NBB'+contractStartDate);
                            objTask=new Task();
                            objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                            objTask.subject='New Bundle Client (Start Date -'+contractStartDate+')- Create Bundle Card and Send Tech Specs';//Subject change on 25th April
                            objTask.ActivityDate=system.today().addDays(1);  
                            //mapAccountIdTeam.get(objOppty.AccountID).keyset().contains('CS - HCloud - Implement/Onboard')?mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Implement/Onboard'):objOppty.addError('Please assign CS - HCloud - Implement/Onboard Role to Account Team Member');  
                            objTask.OwnerId=AssignTo_CSC;//mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Implement/Onboard');
                            System.debug('objTask===>>>>>>'+objTask);
                            listInsertTask.add(objTask);
                            System.debug('listInsertTask===>>>>>>'+listInsertTask);
                        }
                        else if( objOppty.NBB_Renewal__c=='Renewal'){
                            objTask=new Task();
                            objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                            objTask.subject='Renewal Bundle Client(Start Date -'+contractStartDate+')- Create Bundle Card and Send Tech Specs';//Subject change on 25th April
                            objTask.ActivityDate=system.today().addDays(1);  
                            objTask.OwnerId=AssignTo_CSC;//mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Implement/Onboard');  
                            listInsertTask.add(objTask);
                        }      
                    }
                }else if( objOppty.Parent_Upsell__c=='Upsell'&& objOppty.MYD_Deal__c=='First Year' && AssignTo_CSC!=null){
                    Task objTask=new Task();
                    objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                    objTask.subject='Upsell Bundle Client(Start Date -'+contractStartDate+' - Create Bundle Card and Send Tech Specs';
                    objTask.ActivityDate=system.today().addDays(1);  
                    objTask.OwnerId=AssignTo_CSC;//mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Implement/Onboard');  
                    listInsertTask.add(objTask);
                    if(objOppty.NBB_Renewal__c=='NBB' ){
                        System.debug('===>>>>>NBB'+contractStartDate);
                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject='New Bundle Client (Start Date -'+contractStartDate+')- Create Bundle Card and Send Tech Specs';//Subject change on 25th April
                        objTask.ActivityDate=system.today().addDays(1);  
                        //mapAccountIdTeam.get(objOppty.AccountID).keyset().contains('CS - HCloud - Implement/Onboard')?mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Implement/Onboard'):objOppty.addError('Please assign CS - HCloud - Implement/Onboard Role to Account Team Member');  
                        objTask.OwnerId=AssignTo_CSC;//mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Implement/Onboard');
                        System.debug('objTask===>>>>>>'+objTask);
                        listInsertTask.add(objTask);
                        System.debug('listInsertTask===>>>>>>'+listInsertTask);
                    }
                    else if( objOppty.NBB_Renewal__c=='Renewal'){
                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject='Renewal Bundle Client(Start Date -'+contractStartDate+')- Create Bundle Card and Send Tech Specs';//Subject change on 25th April
                        objTask.ActivityDate=system.today().addDays(1);  
                        objTask.OwnerId=AssignTo_CSC;//mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Implement/Onboard');  
                        listInsertTask.add(objTask);
                    }      
                }
            }           
            // Feature set 
            /*   
            WHITE LABEL PRO/ENTERPRISE TASKS 
            */
            System.debug('mapoppIdVsFeatureSets===>'+mapoppIdVsFeatureSets);
            
            integer i=0;
            if(mapoppIdVsFeatureSets.keyset().contains(objOppty.id) && objOppty.MYD_Deal__c=='First Year'){
                System.debug('i=============>'+i);
                for(OpportunityLineItem featureSet : mapoppIdVsFeatureSets.get(objOppty.id)){
                    System.debug('i=============>'+i);
                    System.debug('featureSet.Product_Name__c====>'+featureSet.Product_Name__c);
                    Task objTask;
                    if(featureSet.Product_Name__c=='White Label - Pro' && AssignTo_CSC!=null){
                        if(featureSet.Per_Item_Fee__c==0){
                            // Ist task
                            objTask=new Task();
                            objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                            objTask.subject='SRFP PRO Button Comped – Reach Out';
                            objTask.ActivityDate=system.today().addDays(1);  
                            objTask.OwnerId=AssignTo_CSC;//mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Implement/Onboard');  
                            listInsertTask.add(objTask);
                        }
                        else{
                            // 2nd task
                            if(objOppty.NBB_Renewal__c=='NBB'){
                                objTask=new Task();
                                objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                                objTask.subject='SRFP PRO Button PAID – Reach Out';
                                objTask.ActivityDate=system.today().addDays(1);  
                                objTask.OwnerId=AssignTo_CSC;//mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Implement/Onboard');  
                                listInsertTask.add(objTask);
                            }else if(objOppty.NBB_Renewal__c=='Renewal'){
                                objTask=new Task();
                                objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                                objTask.subject='SRFP PRO Button Renewal - Is button still live?';
                                objTask.ActivityDate=system.today().addDays(1);  
                                objTask.OwnerId=AssignTo_CSC;//mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Implement/Onboard');  
                                listInsertTask.add(objTask);
                            }
                        }
                    }else if(featureSet.Product_Name__c=='White Label - Enterprise'){// && corpRepId!=null){
                            if(corpRepId==null)
                            {
                                System.debug('inside if');
                                corpRepId=mapIDOppParentAcc.containsKey(objOppty.Accountid)
                                ?(mapIDOppParentAcc.get(objOppty.Accountid).Country_Region__c!=null?(mapIDOppParentAcc.get(objOppty.Accountid).Country_Region__c.contains('America')?RoundRobinAssignment():mapNameVSID.get('Kurt Haorokcham')):mapNameVSID.get('Kurt Haorokcham')):mapNameVSID.get('Kurt Haorokcham');
                            }
                            if(corpRepId!=null){
                                // tasks
                                //Task objTask;
                                System.debug('inside this');
                                if(objOppty.NBB_Renewal__c=='NBB'){
                                    objTask=new Task();
                                    objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                                    objTask.subject='SRFP Enterprise Button – Reach Out';
                                    objTask.ActivityDate=system.today().addDays(1);  
                                    /*17/05/2016 : assignment by Round Robin Technique */
                                    objTask.OwnerId=corpRepId;
                                    //objTask.OwnerId=mapAccountIdTeam.get(objOppty.AccountID).keySet().contains('CS - HCloud - Corporate Rep')?mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Corporate Rep'):(mapIDOppParentAcc.get(objOppty.Accountid).Country_Region__c.contains('America')?RoundRobinAssignment():mapNameVSID.get('Kurt Haorokcham'));//mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Corporate Rep');
                                    //objTask.OwnerId=mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Corporate Rep');  
                                    listInsertTask.add(objTask);
                                }else if(objOppty.NBB_Renewal__c=='Renewal'){
                                    objTask=new Task();
                                    objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                                    objTask.subject='Renewal SRFP Enterprise Button – Everything going smooth?';
                                    objTask.ActivityDate=system.today().addDays(1);  
                                    /*17/05/2016 : assignment by Round Robin Technique */
                                    objTask.OwnerId=corpRepId;
                                    //objTask.OwnerId=mapAccountIdTeam.get(objOppty.AccountID).keySet().contains('CS - HCloud - Corporate Rep')?mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Corporate Rep'):(mapIDOppParentAcc.get(objOppty.Accountid).Country_Region__c.contains('America')?RoundRobinAssignment():mapNameVSID.get('Kurt Haorokcham'));//mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Corporate Rep');
                                    //objTask.OwnerId=mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Corporate Rep');  
                                    listInsertTask.add(objTask);
                                }
                            }
                    }//SMP, SVP, EMP, EVP, PMPP, PMPD, PVP TASK TASKS
                    else if( i==0 && (featureSet.Product_Name__c=='EliteMeetings-Premier Marketing Program Digital' ||  featureSet.Product_Name__c=='EliteMeetings-Standard Marketing Program'||  featureSet.Product_Name__c=='SpeedRFP-Standard Visibility Package' || featureSet.Product_Name__c=='EliteMeetings-Enhanced Marketing Program' || featureSet.Product_Name__c=='EliteMeetings-Premier Marketing Program Print' || featureSet.Product_Name__c=='SpeedRFP-Enhanced Visibility Package' || featureSet.Product_Name__c=='SpeedRFP-Premier Visibility Package' || featureSet.Product_Name__c=='EliteMeetings-Premier Marketing Program Magazine' || featureSet.Product_Name__c=='EliteMeetings-Premier Marketing Program Digital+Magazine')){
                        i=1;
                        //Task objTask;
                        if(objOppty.NBB_Renewal__c=='Renewal' && AssignTo_CSC!=null){
                            System.debug('insifed iddidid ');
                            objTask=new Task();
                            objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                            objTask.subject='Renewal EMI Marketing Package - Reach out to review purchase';
                            objTask.ActivityDate=system.today().addDays(1);  
                            objTask.OwnerId=AssignTo_CSC;//mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Implement/Onboard');  
                            listInsertTask.add(objTask);
                            System.debug('listInsertTask===>'+listInsertTask);
                        }
                        if(objOppty.NBB_Renewal__c=='Renewal' || objOppty.NBB_Renewal__c=='NBB' || objOppty.NBB_Renewal__c=='NBB Repeated' && mapNameVSID.containsKey('Susan Campbell'))
                        {
                            objTask=new Task();
                            objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                            objTask.subject='Write and Implement Elite Overview';
                            objTask.ActivityDate=system.today().addDays(7);  
                            
                            objTask.OwnerId= mapNameVSID.get('Susan Campbell'); 
                            listInsertTask.add(objTask);
                        }
                    }  
                    //PMPP TASKS
                    if(mapNameVSID.containsKey('Pete Murray') && featureSet.Product_Name__c=='EliteMeetings-Premier Marketing Program Print' || featureSet.Product_Name__c=='EliteMeetings-Premier Marketing Program Digital' || featureSet.Product_Name__c=='EliteMeetings-Premier Marketing Program Magazine' || featureSet.Product_Name__c=='EliteMeetings-Premier Marketing Program Digital+Magazine'){
                        System.debug('elite meetings print');
                        
                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject='NBB/Renewal PMPP';
                        objTask.ActivityDate=system.today().addDays(7);  
                        objTask.OwnerId= mapNameVSID.get('Pete Murray'); // add to custom setting
                        listInsertTask.add(objTask);
                    }
                    //CSN SUPPLIER FEATURE TASKS
                    else if(featureSet.Product_Name__c=='Supplier Feature-Professional Package' && AssignTo_CSC!=null){
                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject='CSN Professional License  (Feature Bundles)- Reach out for Implementation';
                        objTask.ActivityDate=system.today().addDays(1);  
                        objTask.OwnerId= AssignTo_CSC; // add to custom setting
                        listInsertTask.add(objTask);
                    }
                    else if(featureSet.Product_Name__c=='Supplier Feature-Enterprise Package' && AssignTo_AMCSN!=null){
                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject='Supplier Bundle Enterprise client - Bi-Annual CRM';
                        objTask.ActivityDate=system.today().addDays(180);  
                        objTask.OwnerId= AssignTo_AMCSN; // add to custom setting
                        listInsertTask.add(objTask);

                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject='Call for Renewal (Supplier Bundle Enterprise)'+(contractEndDate);
                        objTask.ActivityDate=objOppty.ContractEndDate__c!=null?objOppty.ContractEndDate__c.addDays(-120):null;  
                        objTask.OwnerId= AssignTo_AMCSN; // add to custom setting
                        listInsertTask.add(objTask);
                    }
                    else if(featureSet.Product_Name__c=='Supplier Feature-CSN API Access'){// && corpRepId!=null){
                        if(corpRepId==null)
                        {
                            System.debug('inside if');
                            corpRepId=mapIDOppParentAcc.containsKey(objOppty.Accountid)
                            ?(mapIDOppParentAcc.get(objOppty.Accountid).Country_Region__c!=null?(mapIDOppParentAcc.get(objOppty.Accountid).Country_Region__c.contains('America')?RoundRobinAssignment():mapNameVSID.get('Kurt Haorokcham')):mapNameVSID.get('Kurt Haorokcham')):mapNameVSID.get('Kurt Haorokcham');
                        }
                        if(corpRepId!=null){
                            objTask=new Task();
                            objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                            objTask.subject='Integration - Research Next Steps';
                            objTask.ActivityDate=system.today().addDays(1);  
                            /*17/05/2016 : assignment by Round Robin Technique */
                            objTask.OwnerId=corpRepId;
                            listInsertTask.add(objTask);
                        }
                    }
                    else if(featureSet.Product_Name__c=='RFP Reports - RFP Deep Dive Consultation'){// && corpRepId!=null){
                        if(corpRepId==null)
                        {
                            System.debug('inside if');
                            corpRepId=mapIDOppParentAcc.containsKey(objOppty.Accountid)
                            ?(mapIDOppParentAcc.get(objOppty.Accountid).Country_Region__c!=null?(mapIDOppParentAcc.get(objOppty.Accountid).Country_Region__c.contains('America')?RoundRobinAssignment():mapNameVSID.get('Kurt Haorokcham')):mapNameVSID.get('Kurt Haorokcham')):mapNameVSID.get('Kurt Haorokcham');
                        }
                        if(corpRepId!=null){
                            objTask=new Task();
                            objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                            objTask.subject='Deep Dive - Reach Out to Sales for Next Steps';//objTask.subject='Integration - Deep Dive - Reach Out to Sales for Next Steps';
                            objTask.ActivityDate=system.today().addDays(1);  
                            /*17/05/2016 : assignment by Round Robin Technique */
                            objTask.OwnerId=corpRepId;
                            listInsertTask.add(objTask);
                        }
                    }
                    else if(featureSet.Product_Name__c=='Supplier Feature-Cross Account Visibility'){// && corpRepId!=null){
                        if(corpRepId==null)
                        {
                            System.debug('inside if');
                            corpRepId=mapIDOppParentAcc.containsKey(objOppty.Accountid)
                            ?(mapIDOppParentAcc.get(objOppty.Accountid).Country_Region__c!=null?(mapIDOppParentAcc.get(objOppty.Accountid).Country_Region__c.contains('America')?RoundRobinAssignment():mapNameVSID.get('Kurt Haorokcham')):mapNameVSID.get('Kurt Haorokcham')):mapNameVSID.get('Kurt Haorokcham');
                        }
                        if(corpRepId!=null){
                            objTask=new Task();
                            objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                            objTask.subject='CAV Purchased - Reach out for Next Steps';
                            objTask.ActivityDate=system.today().addDays(1);  
                            /*17/05/2016 : assignment by Round Robin Technique */
                            objTask.OwnerId=corpRepId;
                            listInsertTask.add(objTask);
                        }
                    } 
                    /*06/01/2017 : New task for feature Set"Video Marketing" and "Booster-Need Dates"*/
                    else if(featureSet.Product_Name__c=='Video Marketing'){
                        if(AssignTo_CSC!=null){
                            objTask=new Task();
                            objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                            objTask.subject='Video Marketing - Reach out for Content';
                            objTask.ActivityDate=system.today().addDays(1);  
                            objTask.OwnerId= AssignTo_CSC;
                            listInsertTask.add(objTask);
                        }
                     }
                    else if(featureSet.Product_Name__c=='Booster-Need Dates'){
                        if(AssignTo_CSC!=null){
                            objTask=new Task();
                            objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                            objTask.subject='Suggested Ad Need Dates Booster Sold';
                            objTask.ActivityDate=system.today().addDays(1);  
                            objTask.OwnerId= AssignTo_CSC;
                            listInsertTask.add(objTask);
                        }
                     }
                     /*.......................ENDS HERE.....................*/
                    else if(featureSet.Product_Name__c=='Supplier Feature-Advanced Custom Proposal' || featureSet.Product_Name__c=='Supplier Feature-Basic Custom Proposal' ){
                        if(AssignTo_AMCSN!=null){
                            objTask=new Task();
                            objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                            objTask.subject='Renewal (Property Level)'+ objOppty.License_Type__c+ 'Date of Renewal-'+contractEndDate;
                            objTask.ActivityDate=objOppty.ContractEndDate__c!=null?objOppty.ContractEndDate__c.addDays(-120):null;  
                            objTask.OwnerId= AssignTo_AMCSN;
                            listInsertTask.add(objTask);
                        }
                        if(AssignTo_CSC!=null){
                            objTask=new Task();
                            objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                            objTask.subject=featureSet.Product_Name__c+'(Start Date-'+contractStartDate+')-Reach out for Implementation';
                            objTask.ActivityDate=system.today().addDays(1); //objOppty.ContractEndDate__c!=null?objOppty.ContractEndDate__c.addDays(1):null;  
                            objTask.OwnerId=AssignTo_CSC;// mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Implement/Onboard');
                            listInsertTask.add(objTask);
                        }

                    }
                    else if(AssignTo_CSC!=null && (featureSet.Product_Name__c=='Supplier Feature-Routing Rules' || featureSet.Product_Name__c=='Supplier Feature-Escalation Reports')){
                        //if(AssignTo_CSC!=null){
                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject= 'Escalation/Routing Rules – '+contractStartDate+'- Reach out for Implementation';
                        objTask.ActivityDate=system.today().addDays(1);
                        objTask.OwnerId=AssignTo_CSC;// mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Implement/Onboard'); // add to custom setting
                        listInsertTask.add(objTask);//}
                    } 
                    else if(featureSet.Product_Name__c=='Supplier Feature-RFP Usernames' && AssignTo_AMCSN!=null){
                        //if(){
                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject= 'User names expires ' + contractEndDate +' Follow up to renew';
                        objTask.ActivityDate=objOppty.ContractEndDate__c!=null?objOppty.ContractEndDate__c.addDays(-120):null;
                        objTask.OwnerId= AssignTo_AMCSN; // add to custom setting
                        listInsertTask.add(objTask);
                        //}
                    }
                    else if(featureSet.Product_Name__c=='Recommended Ads' && AssignTo_CSC!=null){
                        //if(){
                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject= 'Recommended Ads ' + contractStartDate +' Reach out and collect ad';
                        objTask.ActivityDate=system.today().addDays(1);
                        objTask.OwnerId=AssignTo_CSC;// mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Implement/Onboard'); // add to custom setting
                        listInsertTask.add(objTask);//}
                    }
                    else if(featureSet.Product_Name__c=='SpeedRFP-Hero Ad' && AssignTo_CSC!=null){
                        
                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject= 'SpeedRFP-Hero Ad ' + contractStartDate +' Reach out and collect ad';
                        objTask.ActivityDate=featureSet.Start_Date__c!=null?featureSet.Start_Date__c.addDays(-30):null;
                        objTask.OwnerId=AssignTo_CSC;// mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Implement/Onboard'); // add to custom setting
                        listInsertTask.add(objTask);
                    }
                    else if(featureSet.Product_Name__c=='EliteMeetings-Hero Ad - EM.com' && AssignTo_CSC!=null){
                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject= 'EliteMeetings-Hero Ad - EM.com ' + contractStartDate+' Reach out and collect ad';
                        objTask.ActivityDate=featureSet.Start_Date__c!=null?featureSet.Start_Date__c.addDays(-30):null;
                        objTask.OwnerId=AssignTo_CSC;// mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Implement/Onboard'); // add to custom setting
                        listInsertTask.add(objTask);
                    }
                    else if(featureSet.Product_Name__c=='RFP Report-Comp Set'  && AssignTo_AMCSN!=null && featureSet.of_Items__c!=null && featureSet.of_Comp_Items_Hrs__c!=null){      // RFP REPORTS TASKS
                        
                        if(featureSet.of_Items__c+featureSet.of_Comp_Items_Hrs__c==1){
                            objTask=new Task();
                            objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                            objTask.subject= 'One Time Report Delivery CRM and Renewal';
                            objTask.ActivityDate=objOppty.CloseDate!=null?objOppty.CloseDate.addDays(30):null;
                            objTask.OwnerId= AssignTo_AMCSN; // add to custom setting
                            listInsertTask.add(objTask);
                        }
                        else if(featureSet.of_Items__c+featureSet.of_Comp_Items_Hrs__c>1 && featureSet.of_Items__c+featureSet.of_Comp_Items_Hrs__c<4){
                            objTask=new Task();
                            objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                            objTask.subject= 'Monthly Report Delivery CRM ';
                            objTask.ActivityDate=objOppty.CloseDate!=null?objOppty.CloseDate.addDays(30):null;
                            objTask.OwnerId= AssignTo_AMCSN; // add to custom setting
                            listInsertTask.add(objTask);
                            // 2nd task
                            objTask=new Task();
                            objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                            objTask.subject= 'Monthly Report CRM and Renewal';
                            objTask.ActivityDate=objOppty.ContractEndDate__c!=null?objOppty.ContractEndDate__c.addDays(30):null;
                            objTask.OwnerId= AssignTo_AMCSN; // add to custom setting
                            listInsertTask.add(objTask);
                            }else if( featureSet.of_Items__c+featureSet.of_Comp_Items_Hrs__c>=4){
                            objTask=new Task();
                            objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                            objTask.subject= 'Quarterly Report Delivery CRM ';
                            objTask.ActivityDate=objOppty.CloseDate!=null?objOppty.CloseDate.addDays(30):null;
                            objTask.OwnerId= AssignTo_AMCSN; // add to custom setting
                            listInsertTask.add(objTask);
                            // 2nd task
                            objTask=new Task();
                            objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                            objTask.subject= 'Quarterly Report CRM and Renewal';
                            objTask.ActivityDate=objOppty.ContractEndDate__c!=null?objOppty.ContractEndDate__c.addDays(30):null;
                            objTask.OwnerId= AssignTo_AMCSN; // add to custom setting
                            listInsertTask.add(objTask);
                        }   
                    } 
                    //Connect Magzine Feature Set
                    if(featureSet.Product_Name__c=='Cvent Connect - Print - 1 pg Display Ad' || featureSet.Product_Name__c=='Cvent Connect - Print - 1 pg Property Page Article' || featureSet.Product_Name__c=='Cvent Connect - Print - 2 pg Display Ad'||featureSet.Product_Name__c=='Cvent Connect - Print - 2 pg Property Page Article'||featureSet.Product_Name__c=='Cvent Connect - Print - Back Cover'||featureSet.Product_Name__c=='Cvent Connect - Print - Back Inside Cover'||featureSet.Product_Name__c=='Cvent Connect - Print - Front Cover' ||featureSet.Product_Name__c=='Cvent Connect - Print - Front Inside Cover' || featureSet.Product_Name__c=='Cvent Connect - Print - Front Inside Spread')
                    {
                        if(mapNameVSID.containsKey('Pete Murray')){
                            objTask=new Task();
                            objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                            objTask.subject= 'Connect Magazine contract';
                            objTask.ActivityDate=system.today().addDays(1);
                            objTask.OwnerId= mapNameVSID.get('Pete Murray');
                            listInsertTask.add(objTask);
                        }
                        if(mapNameVSID.containsKey('Susan Campbell')){
                            objTask=new Task();
                            objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                            objTask.subject= 'Connect Magazine contract';
                            objTask.ActivityDate=system.today().addDays(1);
                            objTask.OwnerId= mapNameVSID.get('Susan Campbell');
                            listInsertTask.add(objTask);
                        }
                    }
                    /* 05/16/2016 HSR: New Task added for the Social Wall feature set.*/
                    if(featureSet.Product_Name__c=='Social Wall' && featureSet.Product__c=='CSN - Social Wall')
                    {
                        objTask=new Task();
                        objTask.WhatId=opptyIdVsAccIdMap.get(objOppty.Id);
                        objTask.subject= 'Social Wall - Reach out for Implementation';
                        objTask.ActivityDate=system.today().addDays(1);
                        objTask.OwnerId= mapIDOppParentAcc.get(objOppty.Accountid).Country_Region__c.contains('America')? mapNameVSID.get('Megan Mussomeli'): mapNameVSID.get('Kurt Haorokcham');
                        listInsertTask.add(objTask);
                    }
                }   // End of Feature for loop
            }// end of Feature if
            
            //14/06/2016 : Commented for a time being 
            if(mapoppIdVsMSACampaign.keySet().contains(objOppty.MSA_Code__c)&& objOppty.MYD_Deal__c=='First Year'){
                System.debug('Eneter iF******');
                //for(Multi_Property_Bundles__c objMSACampign : mapoppIdVsMSACampaign.get(objOppty.MSA_Code__c)){
                    Multi_Property_Bundles__c objMSACampign = mapoppIdVsMSACampaign.get(objOppty.MSA_Code__c);
                    String startDate=(objMSACampign.Start_Date__c!=null?objMSACampign.Start_Date__c.format():'');
                    String endDate=(objMSACampign.End_Date__c!=null?objMSACampign.End_Date__c.format():'');
                    Task objTask=new Task();
                    objTask.WhatId=objMSACampign.Account__c;//opptyIdVsAccIdMap.get(objOppty.Id);
                    objTask.subject= 'Renewal (Corporate  Level) -'+objMSACampign.MSA_Code__c +'-(Date of Renewal-'+endDate ;
                    objTask.ActivityDate=objMSACampign.End_Date__c!=null?objMSACampign.End_Date__c.addDays(-120):null;
                    objTask.OwnerId= objOppty.ownerID; // add to custom setting
                    listInsertTask.add(objTask);
                    // 2nd task
                    objTask=new Task();
                    objTask.WhatId=objMSACampign.Account__c;//opptyIdVsAccIdMap.get(objOppty.Id);
                    objTask.subject='MSA purchased '+objMSACampign.MSA_Code__c + '-(Corporate  Level) NBB-First CRM';
                    objTask.ActivityDate=objMSACampign.End_Date__c!=null?objMSACampign.End_Date__c.addDays(60):null;
                    objTask.OwnerId= objOppty.ownerID;//objMSACampign.Account__r.OwnerId; // add to custom setting
                    listInsertTask.add(objTask);
                    // 3rd Task
                    //-------------------------------------Getting the Assign To Id---------------------------------
                    Id MSAcorpRepId;
                    MSAcorpRepId=mapAccountIdTeam.containsKey(objMSACampign.Account__c)?(mapAccountIdTeam.get(objMSACampign.Account__c).keySet().contains('CS - HCloud - Corporate Rep')?mapAccountIdTeam.get(objMSACampign.Account__c).get('CS - HCloud - Corporate Rep'):null):null;
                    System.debug('MSAcorpRepId1st====>>>'+MSAcorpRepId);
                    if(MSAcorpRepId==null)
                    {
                        System.debug('inside if');
                        MSAcorpRepId=mapIDOppParentAcc.containsKey(objMSACampign.Account__c)
                        ?(mapIDOppParentAcc.get(objMSACampign.Account__c).Country_Region__c!=null?(mapIDOppParentAcc.get(objMSACampign.Account__c).Country_Region__c.contains('America')?RoundRobinAssignment():mapNameVSID.get('Kurt Haorokcham')):mapNameVSID.get('Kurt Haorokcham')):mapNameVSID.get('Kurt Haorokcham');
                    }
                    System.debug('MSAcorpRepId2nd====>>>'+MSAcorpRepId);
                    //Ends Her----------------------------------------------------------------
                    if(MSAcorpRepId!=null){
                        System.debug('# Checkpoint Inside MSA');
                        objTask=new Task();
                        objTask.WhatId=objMSACampign.Account__c;//opptyIdVsAccIdMap.get(objOppty.Id);
                        String contractNumber=objOppty.Contract_Number_New__c!=null?objOppty.Contract_Number_New__c:'';
                        objTask.subject= 'MSA purchased ('+objMSACampign.MSA_Code__c+')('+contractNumber+')(Start Date -'+startDate+') - Set Kickoff Call and Reach out to Property CS Rep';
                        //objTask.subject= '12345 MSA purchased ('+objMSACampign.MSA_Code__c+')()(Start Date -'+startDate+') - Set Kickoff Call and Reach out to Property CS Rep';
                        objTask.ActivityDate=system.today().addDays(1);
                        //17/05/2016 : assignment by Round Robin Technique 
                        //objTask.OwnerId=mapAccountIdTeam.get(objOppty.AccountID).keySet().contains('CS - HCloud - Corporate Rep')?mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Corporate Rep'):(mapIDOppParentAcc.get(objOppty.Accountid).Country_Region__c.contains('America')?RoundRobinAssignment():mapNameVSID.get('Kurt Haorokcham'));//mapAccountIdTeam.get(objOppty.AccountID).get('CS - HCloud - Corporate Rep');
                        objTask.OwnerId=MSAcorpRepId;
                        listInsertTask.add(objTask);
                    }
    
    
                    System.debug('listInsertTask====>'+listInsertTask);
                    //Update the TaskCreated__c field to true
                    objMSACampign.TaskCreated__c=true;
                    multiPropertyList.add(objMSACampign);
                //}//end of MSA Campign for loop 
            } 

        }// end of outer for loop 
        system.debug('**************'+listInsertTask);
        if(listInsertTask.size()>0)
        try{
            System.debug('Inside Try Block');
            database.insert(listInsertTask);
            if(multiPropertyList.size()>0)
                update multiPropertyList;
            System.debug('currentIndex===>'+currentIndex);
            For(TaskRRassignment__c mcs : userIndexVsTaskRRMap.values())
            {
                if(mcs.Name==String.ValueOf(currentIndex))
                {
                    mcs.CurrentAssignment__c = true;
                    taskRRAssignList.add(mcs);
                    //update mcs ;
                }
                else{
                    mcs.CurrentAssignment__c = false;
                    taskRRAssignList.add(mcs);
                }
            }
            update taskRRAssignList;
            for(Id objOppty:newMapOppty.KeySet()){
            Opportunity oppObj=new Opportunity(Id=objOppty,Task_Created__c=true);
            oppObjList.add(oppObj);
            }
            update oppObjList;
        }
        catch(Exception e)
        {
            System.debug('Exception while inserting task'+e);
        }
    }// end of method
    public static void fakeMethod1(){
    Integer i = 0;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
        i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
  i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
        i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
   }
   public static void fakeMethod2(){
    Integer i = 0;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
        i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
  i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
        i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
   }
   public static void fakeMethod3(){
    Integer i = 0;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
        i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
  i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
        i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
   }
   public static void fakeMethod4(){
    Integer i = 0;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
        i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
  i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
        i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
   }
    public static void fakeMethod(){
    Integer i = 0;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
        i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
        i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
        i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
      i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
  }
}